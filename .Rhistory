# Load the sales dataset
df_sales <- read.csv('data/amazon.csv')
# Install and load required libraries
install.packages("tidyverse")
install.packages("corrplot")
library(tidyverse)
library(corrplot)
# Load the sales dataset
df_sales <- read.csv('data/amazon.csv')
# Load the customer behavior dataset
df_customer_behavior <- read.csv('data/customer-behavior.csv')
# Display the first few rows of each dataset
cat("Sales Dataset:\n")
head(df_sales)
cat("\nCustomer Behavior Dataset:\n")
head(df_customer_behavior)
# Measure of Frequency - Countplot for product categories
ggplot(df_sales, aes(x = category)) +
geom_bar() +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Measure of Central Tendency - Distribution of discounted prices
ggplot(df_sales, aes(x = discounted_price)) +
geom_histogram(bins = 30, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Load necessary libraries
library(tidyverse)
# Load the sales dataset
df_sales <- read.csv('data/amazon.csv')
# Load the customer behavior dataset
df_customer_behavior <- read.csv('data/customer-behavior.csv')
# Display the first few rows of each dataset
cat("Sales Dataset:\n")
print(head(df_sales))
cat("\nCustomer Behavior Dataset:\n")
print(head(df_customer_behavior))
# Measure of Frequency - Countplot for product categories
df_sales %>%
ggplot(aes(x = category)) +
geom_bar() +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Measure of Central Tendency - Distribution of discounted prices
df_sales %>%
ggplot(aes(x = discounted_price)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Load necessary libraries
library(tidyverse)
# Load the sales dataset
df_sales <- read.csv('data/amazon.csv')
# Load the customer behavior dataset
df_customer_behavior <- read.csv('data/customer-behavior.csv')
# Display the first few rows of each dataset
cat("Sales Dataset:\n")
print(head(df_sales))
cat("\nCustomer Behavior Dataset:\n")
print(head(df_customer_behavior))
# Measure of Frequency - Countplot for product categories
df_sales %>%
ggplot(aes(x = category)) +
geom_bar() +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Measure of Central Tendency - Distribution of discounted prices
df_sales %>%
ggplot(aes(x = discounted_price)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Load necessary libraries
library(tidyverse)
# Load the sales dataset
df_sales <- read.csv('data/amazon.csv')
# Load the customer behavior dataset
df_customer_behavior <- read.csv('data/customer-behavior.csv')
# Display the first few rows of each dataset
cat("Sales Dataset:\n")
print(head(df_sales))
cat("\nCustomer Behavior Dataset:\n")
print(head(df_customer_behavior))
# Measure of Frequency - Countplot for product categories
df_sales %>%
ggplot(aes(x = category)) +
geom_bar() +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Measure of Central Tendency - Distribution of discounted prices
df_sales %>%
ggplot(aes(x = as.numeric(discounted_price))) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Measure of Distribution - Distribution of discount percentages
df_sales %>%
ggplot(aes(x = discount_percentage)) +
geom_histogram(bins = 20, fill = "coral", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discount Percentages", x = "Discount Percentage", y = "Frequency")
# Load necessary libraries
library(tidyverse)
# Load the sales dataset
df_sales <- read.csv('data/amazon.csv')
# Load the customer behavior dataset
df_customer_behavior <- read.csv('data/customer-behavior.csv')
# Display the first few rows of each dataset
cat("Sales Dataset:\n")
print(head(df_sales))
cat("\nCustomer Behavior Dataset:\n")
print(head(df_customer_behavior))
# Measure of Frequency - Countplot for product categories
df_sales %>%
ggplot(aes(x = category)) +
geom_bar() +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Measure of Central Tendency - Distribution of discounted prices
df_sales %>%
ggplot(aes(x = as.numeric(discounted_price))) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Measure of Distribution - Distribution of discount percentages
df_sales %>%
ggplot(aes(x = as.numeric(discount_percentage))) +
geom_histogram(bins = 20, fill = "coral", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discount Percentages", x = "Discount Percentage", y = "Frequency")
# Measure of Relationship - Scatter plot of discounted price vs. rating
df_sales %>%
ggplot(aes(x = discounted_price, y = rating)) +
geom_point() +
labs(title = "Scatter Plot of Discounted Price vs. Rating", x = "Discounted Price", y = "Rating")
# Measures of Relationship - Scatter plot with regression line
df_sales %>%
ggplot(aes(x = actual_price, y = discounted_price)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Scatter Plot with Regression Line", x = "Actual Price", y = "Discounted Price")
# Correlation Matrix (Measures of Relationship for numerical columns)
correlation_matrix <- cor(df_sales)
# Load necessary libraries
library(tidyverse)
# Load the sales dataset
df_sales <- read.csv('data/amazon.csv')
# Load the customer behavior dataset
df_customer_behavior <- read.csv('data/customer-behavior.csv')
# Display the first few rows of each dataset
cat("Sales Dataset:\n")
print(head(df_sales))
cat("\nCustomer Behavior Dataset:\n")
print(head(df_customer_behavior))
# Measure of Frequency - Countplot for product categories
df_sales %>%
ggplot(aes(x = category)) +
geom_bar() +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Measure of Central Tendency - Distribution of discounted prices
df_sales %>%
ggplot(aes(x = as.numeric(discounted_price))) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Measure of Distribution - Distribution of discount percentages
df_sales %>%
ggplot(aes(x = as.numeric(discount_percentage))) +
geom_histogram(bins = 20, fill = "coral", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discount Percentages", x = "Discount Percentage", y = "Frequency")
# Measure of Relationship - Scatter plot of discounted price vs. rating
df_sales %>%
ggplot(aes(x = discounted_price, y = rating)) +
geom_point() +
labs(title = "Scatter Plot of Discounted Price vs. Rating", x = "Discounted Price", y = "Rating")
# Measures of Relationship - Scatter plot with regression line
df_sales %>%
ggplot(aes(x = actual_price, y = discounted_price)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Scatter Plot with Regression Line", x = "Actual Price", y = "Discounted Price")
# Correlation Matrix (Measures of Relationship for numerical columns)
numeric_columns <- sapply(df_sales, is.numeric)
correlation_matrix <- cor(df_sales[, numeric_columns])
correlation_matrix <- cor(df_sales)
# Load necessary libraries
library(ggplot2)
library(corrplot)
# Load the sales dataset
df_sales <- read.csv("data/amazon.csv")
# Display the first few rows of the dataset
head(df_sales)
# Measure of Frequency - Countplot for product categories
ggplot(df_sales, aes(x = category)) +
geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Measure of Central Tendency - Distribution of discounted prices
ggplot(df_sales, aes(x = discounted_price)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Load necessary libraries
library(ggplot2)
library(corrplot)
# Load the sales dataset
df_sales <- read.csv("data/amazon.csv")
# Display the first few rows of the dataset
head(df_sales)
# Measure of Frequency - Countplot for product categories
ggplot(df_sales, aes(x = category)) +
geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Convert 'discounted_price' to numeric (assuming it's not already)
df_sales$discounted_price <- as.numeric(df_sales$discounted_price)
# Measure of Central Tendency - Distribution of discounted prices
ggplot(df_sales, aes(x = discounted_price)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Measure of Distribution - Distribution of discount percentages
ggplot(df_sales, aes(x = discount_percentage)) +
geom_histogram(bins = 20, fill = "coral", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discount Percentages", x = "Discount Percentage", y = "Frequency")
# Load necessary libraries
library(ggplot2)
library(corrplot)
# Load the sales dataset
df_sales <- read.csv("data/amazon.csv")
# Display the first few rows of the dataset
head(df_sales)
# Measure of Frequency - Countplot for product categories
ggplot(df_sales, aes(x = category)) +
geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Convert 'discounted_price' to numeric (assuming it's not already)
df_sales$discounted_price <- as.numeric(df_sales$discounted_price)
# Measure of Central Tendency - Distribution of discounted prices
ggplot(df_sales, aes(x = discounted_price)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Convert 'discount_percentage' to numeric (assuming it's not already)
df_sales$discount_percentage <- as.numeric(df_sales$discount_percentage)
# Measure of Distribution - Distribution of discount percentages
ggplot(df_sales, aes(x = discount_percentage)) +
geom_histogram(bins = 20, fill = "coral", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discount Percentages", x = "Discount Percentage", y = "Frequency")
# Measure of Relationship - Scatter plot of discounted price vs. rating
ggplot(df_sales, aes(x = discounted_price, y = rating)) +
geom_point() +
labs(title = "Scatter Plot of Discounted Price vs. Rating", x = "Discounted Price", y = "Rating")
# Correlation Matrix (Measures of Relationship for numerical columns)
numeric_columns <- sapply(df_sales, is.numeric)
correlation_matrix <- cor(df_sales[, numeric_columns])
# Display the correlation matrix using corrplot
corrplot(correlation_matrix, method = "circle", type = "upper", tl.col = "black")
# Load necessary libraries
library(ggplot2)
library(corrplot)
# Load the sales dataset
df_sales <- read.csv("data/amazon.csv")
# Display the first few rows of the dataset
head(df_sales)
# Measure of Frequency - Countplot for product categories
ggplot(df_sales, aes(x = category)) +
geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Convert 'discounted_price' to numeric (assuming it's not already)
df_sales$discounted_price <- as.numeric(df_sales$discounted_price)
# Measure of Central Tendency - Distribution of discounted prices
ggplot(df_sales, aes(x = discounted_price)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Convert 'discount_percentage' to numeric (assuming it's not already)
df_sales$discount_percentage <- as.numeric(df_sales$discount_percentage)
# Measure of Distribution - Distribution of discount percentages
ggplot(df_sales, aes(x = discount_percentage)) +
geom_histogram(bins = 20, fill = "coral", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discount Percentages", x = "Discount Percentage", y = "Frequency")
# Measure of Relationship - Scatter plot of discounted price vs. rating
ggplot(df_sales, aes(x = discounted_price, y = rating)) +
geom_point() +
labs(title = "Scatter Plot of Discounted Price vs. Rating", x = "Discounted Price", y = "Rating")
# Correlation Matrix (Measures of Relationship for numerical columns)
numeric_columns <- sapply(df_sales, is.numeric)
correlation_matrix <- cor(df_sales[, numeric_columns])
# Display the correlation matrix using corrplot
corrplot(correlation_matrix, method = "circle", type = "upper", tl.col = "black")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
# Load necessary libraries
library(ggplot2)
library(corrplot)
# Load the sales dataset
df_sales <- read.csv("data/amazon.csv")
# Display the first few rows of the dataset
head(df_sales)
# Measure of Frequency - Countplot for product categories
ggplot(df_sales, aes(x = category)) +
geom_bar(fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Count of Products in Each Category", x = "Product Category", y = "Count")
# Convert 'discounted_price' to numeric (assuming it's not already)
df_sales$discounted_price <- as.numeric(df_sales$discounted_price)
# Measure of Central Tendency - Distribution of discounted prices
ggplot(df_sales, aes(x = discounted_price)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discounted Prices", x = "Discounted Price", y = "Frequency")
# Convert 'discount_percentage' to numeric (assuming it's not already)
df_sales$discount_percentage <- as.numeric(df_sales$discount_percentage)
# Measure of Distribution - Distribution of discount percentages
ggplot(df_sales, aes(x = discount_percentage)) +
geom_histogram(bins = 20, fill = "coral", color = "black", alpha = 0.7) +
labs(title = "Distribution of Discount Percentages", x = "Discount Percentage", y = "Frequency")
# Measure of Relationship - Scatter plot of discounted price vs. rating
ggplot(df_sales, aes(x = discounted_price, y = rating)) +
geom_point() +
labs(title = "Scatter Plot of Discounted Price vs. Rating", x = "Discounted Price", y = "Rating")
# Correlation Matrix (Measures of Relationship for numerical columns)
numeric_columns <- sapply(df_sales, is.numeric)
correlation_matrix <- cor(df_sales[, numeric_columns])
# Display the correlation matrix using corrplot
corrplot(correlation_matrix, method = "circle", type = "upper", tl.col = "black")
# Load the customer behavior dataset
df_customer_behavior <- read.csv("data/customer-behavior.csv")
# Display the first few rows of the dataset
head(df_customer_behavior)
# Measure of Frequency - Countplot for gender
ggplot(df_customer_behavior, aes(x = Gender)) +
geom_bar(fill = "lightgreen", color = "black", alpha = 0.7) +
labs(title = "Count of Respondents in Each Gender Category", x = "Gender", y = "Count")
# Measure of Central Tendency - Distribution of age
ggplot(df_customer_behavior, aes(x = age)) +
geom_histogram(bins = 20, fill = "lightgreen", color = "black", alpha = 0.7) +
labs(title = "Distribution of Age", x = "Age", y = "Frequency")
# Measure of Distribution - Distribution of purchase frequencies
ggplot(df_customer_behavior, aes(x = Purchase_Frequency)) +
geom_histogram(bins = 15, fill = "lightcoral", color = "black", alpha = 0.7) +
labs(title = "Distribution of Purchase Frequencies", x = "Purchase Frequency", y = "Frequency")
